// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String?  @unique
  // hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // role           String?
  post      Post?    @relation("Author")
  // savedPosts SavedPost[] @relation("SavedPosts")
  // savedPost      SavedPost[]
  accounts       Account[]
}

model Post {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  userId      String       @unique @db.ObjectId
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation("Author", fields: [userId], references: [id])
  // savedPosts SavedPost[]
  Experiences Experience[]
}

model Experience {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  postId      String     @db.ObjectId
  startDate   DateTime
  title       String
  description String
  endDate     DateTime
  post        Post       @relation(fields: [postId], references: [id])
  pros        Pro[]
  cons        Con[]
  dayEvents   DayEvent[]
}

model DayEvent {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  ExperienceId String     @db.ObjectId
  description  String
  startTime    DateTime
  endTime      DateTime
  title        String
  Experience   Experience @relation(fields: [ExperienceId], references: [id])
}

model Con {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  ExperienceId String     @db.ObjectId
  description  String
  Experience   Experience @relation(fields: [ExperienceId], references: [id])
}

model Pro {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  ExperienceId String     @db.ObjectId
  description  String
  Experience   Experience @relation(fields: [ExperienceId], references: [id])
}

// model SavedPost {
//   id     String @id @default(auto()) @map("_id") @db.ObjectId
//   userId String @db.ObjectId
//   postId String @db.ObjectId
//   post   Post   @relation(fields: [postId], references: [id])
//   user   User   @relation(fields: [userId], references: [id])
// }
